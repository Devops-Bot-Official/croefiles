version: '1.0'
mode: remote
identifier: AzureCrowRunner
category: Production
username: crowuser
environment:
  # === Crowstore-backed values ===
  CLONE_DIR:    { value: crowstore://clonedir }
  SOURCE_URL:   { value: crowstore://sourceurl }
  GIT_PROVIDER: { value: crowstore://gitprovider }
  GIT_USERNAME: { value: crowstore://gitusername }
  GIT_TOKEN:    { value: crowstore://gittoken }

  # Either use a literal branch…
  #BRANCHES:     { value: "main" }

  # BRANCHES:   { value: crowstore://gitbranch }

  # === Matching Crowstore tokens (CROWSTORE_TOKEN_<CREDNAME UPPERCASED>) ===
  # These must match the *names after* crowstore:// exactly (uppercased, no extra underscores).
  CROWSTORE_TOKEN_CLONEDIR:    { value: 379c89bdfbe33b78a65f24056d30ea5e }
  CROWSTORE_TOKEN_SOURCEURL:   { value: 75d5d957b968d54a85d048c091612963 }
  CROWSTORE_TOKEN_GITPROVIDER: { value: fe251dd97eccb2ea55da1072ca09c4b8 }
  CROWSTORE_TOKEN_GITUSERNAME: { value: c9e081c08366187bb1ab52a1185696f8 }
  CROWSTORE_TOKEN_GITTOKEN:    { value: 06638103869c385bdb0850f4c248ca3b }

  # Only needed if you use crowstore://gitbranch above:
  #CROWSTORE_TOKEN_GITBRANCH: { value: f4e9076b9dc189ad06dfc485fd731bf7 }
jobs:
- name: CROW CROWFLOW 
  stages:
  - name: Updating Azure Server
    tasks:
      shell:
        enabled: true
        shell: bash
        steps:
        - sudo apt-get update -y

  # Install Git iff missing (your helper also attempts this; doing it here makes logs clearer)
  - name: Install GIT Python(Debian)
    tasks:
      packages:
        enabled: true
        # Keep this list focused on universally-available kits to avoid repo conflicts
        kits:
          - python            # python3, pip, venv
          - git-lfs
        extra_os_packages:
          - shellcheck        # linter that’s reliably in Ubuntu/Debian/Alpine repos
  
        update_cache: true
        verbose: true
        fail_fast: true
        pm_timeout_s: 600
        pm_retries: 3

  # ======== Core: Checkout (invokes your Python helper under the hood) ========
  - name: Git Checkout one
    tasks:
      checkout:
        enabled: true

        # --- required / important fields your function expects ---
        clone_dir: env=CLONE_DIR
        source_url: env=SOURCE_URL
        branches: 
        - master
        provider: env=GIT_PROVIDER
        username: env=GIT_USERNAME
        token: env=GIT_TOKEN

       